{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoSA;;;;AAEA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges, QueryList } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport { dxSortableOptions } from 'devextreme/ui/sortable';\r\nimport { dxTextBoxOptions } from 'devextreme/ui/text_box';\r\nimport DxList from 'devextreme/ui/list';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\nimport { DxiItemComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiMenuItemComponent } from 'devextreme-angular/ui/nested';\r\n/** The List is a widget that represents a collection of items in a scrollable list. */\r\nexport declare class DxListComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxList;\r\n    /** Specifies the shortcut key that sets focus on the widget. */\r\n    accessKey: string;\r\n    /** Specifies whether or not the widget changes its state when interacting with a user. */\r\n    activeStateEnabled: boolean;\r\n    /** Specifies whether or not an end user can delete list items. */\r\n    allowItemDeleting: boolean;\r\n    /** @deprecated Use the itemDragging option instead. */\r\n    /** Specifies whether a user can reorder list items. Grouped items cannot be moved from one group to another. */\r\n    allowItemReordering: boolean;\r\n    /** A Boolean value specifying whether to enable or disable the bounce-back effect. */\r\n    bounceEnabled: boolean;\r\n    /** Specifies whether or not an end-user can collapse groups. */\r\n    collapsibleGroups: boolean;\r\n    /** Binds the widget to data. */\r\n    dataSource: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<string | DevExpress.ui.dxListItem | any>;\r\n    /** Specifies whether the widget responds to user interaction. */\r\n    disabled: boolean;\r\n    /** Specifies the data field whose values should be displayed. Defaults to \"text\" when the data source contains objects. */\r\n    displayExpr: Function | string;\r\n    /** Specifies the attributes to be attached to the widget's root element. */\r\n    elementAttr: any;\r\n    /** Specifies whether the widget can be focused using keyboard navigation. */\r\n    focusStateEnabled: boolean;\r\n    /** Specifies whether data items should be grouped. */\r\n    grouped: boolean;\r\n    /** Specifies a custom template for group captions. */\r\n    groupTemplate: any;\r\n    /** Specifies the widget's height. */\r\n    height: number | Function | string;\r\n    /** Specifies text for a hint that appears when a user pauses on the widget. */\r\n    hint: string;\r\n    /** Specifies whether the widget changes its state when a user pauses on it. */\r\n    hoverStateEnabled: boolean;\r\n    /** Specifies whether or not to show the loading panel when the DataSource bound to the widget is loading data. */\r\n    indicateLoading: boolean;\r\n    /** Specifies the way a user can delete items from the list. */\r\n    itemDeleteMode: string;\r\n    /** Configures item reordering using drag and drop gestures. */\r\n    itemDragging: dxSortableOptions;\r\n    /** The time period in milliseconds before the onItemHold event is raised. */\r\n    itemHoldTimeout: number;\r\n    /** An array of items displayed by the widget. */\r\n    items: Array<string | any | {\r\n        badge?: string;\r\n        disabled?: boolean;\r\n        html?: string;\r\n        icon?: string;\r\n        key?: string;\r\n        showChevron?: boolean;\r\n        template?: any;\r\n        text?: string;\r\n        visible?: boolean;\r\n    }>;\r\n    /** Specifies a custom template for items. */\r\n    itemTemplate: any;\r\n    /** Specifies the key property that provides key values to access data items. Each key value must be unique. */\r\n    keyExpr: Function | string;\r\n    /** Specifies the array of items for a context menu called for a list item. */\r\n    menuItems: Array<any | {\r\n        action?: Function;\r\n        text?: string;\r\n    }>;\r\n    /** Specifies whether an item context menu is shown when a user holds or swipes an item. */\r\n    menuMode: string;\r\n    /** The text displayed on the button used to load the next page from the data source. */\r\n    nextButtonText: string;\r\n    /** The text or HTML markup displayed by the widget if the item collection is empty. */\r\n    noDataText: string;\r\n    /** Specifies the text shown in the pullDown panel, which is displayed when the list is scrolled to the bottom. */\r\n    pageLoadingText: string;\r\n    /** Specifies whether the next page is loaded when a user scrolls the widget to the bottom or when the \"next\" button is clicked. */\r\n    pageLoadMode: string;\r\n    /** Specifies the text displayed in the pullDown panel when the list is pulled below the refresh threshold. */\r\n    pulledDownText: string;\r\n    /** Specifies the text shown in the pullDown panel while the list is being pulled down to the refresh threshold. */\r\n    pullingDownText: string;\r\n    /** A Boolean value specifying whether or not the widget supports the \"pull down to refresh\" gesture. */\r\n    pullRefreshEnabled: boolean;\r\n    /** Specifies the text displayed in the pullDown panel while the list is being refreshed. */\r\n    refreshingText: string;\r\n    /** Specifies whether to repaint only those elements whose data changed. */\r\n    repaintChangesOnly: boolean;\r\n    /** Switches the widget to a right-to-left representation. */\r\n    rtlEnabled: boolean;\r\n    /** A Boolean value specifying if the list is scrolled by content. */\r\n    scrollByContent: boolean;\r\n    /** A Boolean value specifying if the list is scrolled using the scrollbar. */\r\n    scrollByThumb: boolean;\r\n    /** A Boolean value specifying whether to enable or disable list scrolling. */\r\n    scrollingEnabled: boolean;\r\n    /** Configures the search panel. */\r\n    searchEditorOptions: dxTextBoxOptions;\r\n    /** Specifies whether the search panel is visible. */\r\n    searchEnabled: boolean;\r\n    /** Specifies a data object's field name or an expression whose value is compared to the search string. */\r\n    searchExpr: Function | string | Array<Function | string>;\r\n    /** Specifies a comparison operation used to search widget items. */\r\n    searchMode: string;\r\n    /** Specifies a delay in milliseconds between when a user finishes typing, and the search is executed. */\r\n    searchTimeout: number;\r\n    /** Specifies the current search string. */\r\n    searchValue: string;\r\n    /** Specifies the mode in which all items are selected. */\r\n    selectAllMode: string;\r\n    /** Specifies an array of currently selected item keys. */\r\n    selectedItemKeys: Array<any>;\r\n    /** An array of currently selected item objects. */\r\n    selectedItems: Array<any>;\r\n    /** Specifies item selection mode. */\r\n    selectionMode: string;\r\n    /** Specifies when the widget shows the scrollbar. */\r\n    showScrollbar: string;\r\n    /** Specifies whether or not to display controls used to select list items. */\r\n    showSelectionControls: boolean;\r\n    /** Specifies the number of the element when the Tab key is used for navigating. */\r\n    tabIndex: number;\r\n    /** Specifies whether or not the widget uses native scrolling. */\r\n    useNativeScrolling: boolean;\r\n    /** Specifies whether the widget is visible. */\r\n    visible: boolean;\r\n    /** Specifies the widget's width. */\r\n    width: number | Function | string;\r\n    /** A function that is executed when the widget's content is ready and each time the content is changed. */\r\n    onContentReady: EventEmitter<any>;\r\n    /** A function that is executed before the widget is disposed of. */\r\n    onDisposing: EventEmitter<any>;\r\n    /** A function that is executed when a group element is rendered. */\r\n    onGroupRendered: EventEmitter<any>;\r\n    /** A function used in JavaScript frameworks to save the widget instance. */\r\n    onInitialized: EventEmitter<any>;\r\n    /** A function that is executed when a collection item is clicked or tapped. */\r\n    onItemClick: EventEmitter<any>;\r\n    /** A function that is executed when a collection item is right-clicked or pressed. */\r\n    onItemContextMenu: EventEmitter<any>;\r\n    /** A function that is executed after a list item is deleted from the data source. */\r\n    onItemDeleted: EventEmitter<any>;\r\n    /** A function that is executed before a collection item is deleted from the data source. */\r\n    onItemDeleting: EventEmitter<any>;\r\n    /** A function that is executed when a collection item has been held for a specified period. */\r\n    onItemHold: EventEmitter<any>;\r\n    /** A function that is executed after a collection item is rendered. */\r\n    onItemRendered: EventEmitter<any>;\r\n    /** A function that is executed after a list item is moved to another position. */\r\n    onItemReordered: EventEmitter<any>;\r\n    /** A function that is executed when a list item is swiped. */\r\n    onItemSwipe: EventEmitter<any>;\r\n    /** A function that is executed after a widget option is changed. */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /** A function that is executed before the next page is loaded. */\r\n    onPageLoading: EventEmitter<any>;\r\n    /** A function that is executed when the \"pull to refresh\" gesture is performed. Supported in mobile themes only. */\r\n    onPullRefresh: EventEmitter<any>;\r\n    /** A function that is executed on each scroll gesture. */\r\n    onScroll: EventEmitter<any>;\r\n    /** A function that is executed when the \"Select All\" check box value is changed. Applies only if the selectionMode is \"all\". */\r\n    onSelectAllValueChanged: EventEmitter<any>;\r\n    /** A function that is executed when a collection item is selected or selection is canceled. */\r\n    onSelectionChanged: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    accessKeyChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    activeStateEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowItemDeletingChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowItemReorderingChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    bounceEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    collapsibleGroupsChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<string | DevExpress.ui.dxListItem | any>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    displayExprChange: EventEmitter<Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    focusStateEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    groupedChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    groupTemplateChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    hintChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    hoverStateEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    indicateLoadingChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    itemDeleteModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    itemDraggingChange: EventEmitter<dxSortableOptions>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    itemHoldTimeoutChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    itemsChange: EventEmitter<Array<string | any | {\r\n        badge?: string;\r\n        disabled?: boolean;\r\n        html?: string;\r\n        icon?: string;\r\n        key?: string;\r\n        showChevron?: boolean;\r\n        template?: any;\r\n        text?: string;\r\n        visible?: boolean;\r\n    }>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    itemTemplateChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    keyExprChange: EventEmitter<Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    menuItemsChange: EventEmitter<Array<any | {\r\n        action?: Function;\r\n        text?: string;\r\n    }>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    menuModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    nextButtonTextChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    noDataTextChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pageLoadingTextChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pageLoadModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pulledDownTextChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pullingDownTextChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pullRefreshEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    refreshingTextChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    repaintChangesOnlyChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    scrollByContentChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    scrollByThumbChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    scrollingEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    searchEditorOptionsChange: EventEmitter<dxTextBoxOptions>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    searchEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    searchExprChange: EventEmitter<Function | string | Array<Function | string>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    searchModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    searchTimeoutChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    searchValueChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    selectAllModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    selectedItemKeysChange: EventEmitter<Array<any>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    selectedItemsChange: EventEmitter<Array<any>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    selectionModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showScrollbarChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showSelectionControlsChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    tabIndexChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    useNativeScrollingChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    itemsChildren: QueryList<DxiItemComponent>;\r\n    menuItemsChildren: QueryList<DxiMenuItemComponent>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxList;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxListModule {\r\n}\r\n"]}