{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;;;;AAEA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges, QueryList } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxValidator from 'devextreme/ui/validator';\r\nimport { DxComponentExtension, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\nimport { DxiValidationRuleComponent } from 'devextreme-angular/ui/nested';\r\n/** A widget that is used to validate the associated DevExtreme editors against the defined validation rules. */\r\nexport declare class DxValidatorComponent extends DxComponentExtension implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxValidator;\r\n    /** An object that specifies what and when to validate, and how to apply the validation result. */\r\n    adapter: {\r\n        applyValidationResults?: Function;\r\n        bypass?: Function;\r\n        focus?: Function;\r\n        getValue?: Function;\r\n        reset?: Function;\r\n        validationRequestsCallbacks?: any | Array<Function>;\r\n    };\r\n    /** Specifies the attributes to be attached to the widget's root element. */\r\n    elementAttr: any;\r\n    /** Specifies the widget's height. */\r\n    height: number | Function | string;\r\n    /** Specifies the editor name to be used in the validation default messages. */\r\n    name: string;\r\n    /** Specifies the validation group the editor will be related to. */\r\n    validationGroup: string;\r\n    /** An array of validation rules to be checked for the editor with which the dxValidator object is associated. */\r\n    validationRules: Array<DevExpress.ui.RequiredRule | DevExpress.ui.NumericRule | DevExpress.ui.RangeRule | DevExpress.ui.StringLengthRule | DevExpress.ui.CustomRule | DevExpress.ui.CompareRule | DevExpress.ui.PatternRule | DevExpress.ui.EmailRule | DevExpress.ui.AsyncRule>;\r\n    /** Specifies the widget's width. */\r\n    width: number | Function | string;\r\n    /** A function that is executed before the widget is disposed of. */\r\n    onDisposing: EventEmitter<any>;\r\n    /** A function used in JavaScript frameworks to save the widget instance. */\r\n    onInitialized: EventEmitter<any>;\r\n    /** A function that is executed after a widget option is changed. */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /** A function that is executed after a value is validated. */\r\n    onValidated: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    adapterChange: EventEmitter<{\r\n        applyValidationResults?: Function;\r\n        bypass?: Function;\r\n        focus?: Function;\r\n        getValue?: Function;\r\n        reset?: Function;\r\n        validationRequestsCallbacks?: any | Array<Function>;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    nameChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    validationGroupChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    validationRulesChange: EventEmitter<Array<DevExpress.ui.RequiredRule | DevExpress.ui.NumericRule | DevExpress.ui.RangeRule | DevExpress.ui.StringLengthRule | DevExpress.ui.CustomRule | DevExpress.ui.CompareRule | DevExpress.ui.PatternRule | DevExpress.ui.EmailRule | DevExpress.ui.AsyncRule>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    validationRulesChildren: QueryList<DxiValidationRuleComponent>;\r\n    parentElement: any;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxValidator;\r\n    private getParentElement;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxValidatorModule {\r\n}\r\n"]}