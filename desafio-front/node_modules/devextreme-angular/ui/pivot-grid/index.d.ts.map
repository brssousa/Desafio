{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqTA;;;;AAEA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\n/** The PivotGrid is a widget that allows you to display and analyze multi-dimensional data from a local storage or an OLAP cube. */\r\nexport declare class DxPivotGridComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxPivotGrid;\r\n    /** Allows an end-user to expand/collapse all header items within a header level. */\r\n    allowExpandAll: boolean;\r\n    /** Allows a user to filter fields by selecting or deselecting values in the popup menu. */\r\n    allowFiltering: boolean;\r\n    /** Allows an end-user to change sorting options. */\r\n    allowSorting: boolean;\r\n    /** Allows an end-user to sort columns by summary values. */\r\n    allowSortingBySummary: boolean;\r\n    /** Specifies the area to which data field headers must belong. */\r\n    dataFieldArea: string;\r\n    /** Binds the widget to data. */\r\n    dataSource: DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>;\r\n    /** Specifies whether the widget responds to user interaction. */\r\n    disabled: boolean;\r\n    /** Specifies the attributes to be attached to the widget's root element. */\r\n    elementAttr: any;\r\n    /** Configures client-side exporting. */\r\n    export: {\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        ignoreExcelErrors?: boolean;\r\n        proxyUrl?: string;\r\n    };\r\n    /** The Field Chooser configuration options. */\r\n    fieldChooser: {\r\n        allowSearch?: boolean;\r\n        applyChangesMode?: string;\r\n        enabled?: boolean;\r\n        height?: number;\r\n        layout?: number | string;\r\n        searchTimeout?: number;\r\n        texts?: {\r\n            allFields?: string;\r\n            columnFields?: string;\r\n            dataFields?: string;\r\n            filterFields?: string;\r\n            rowFields?: string;\r\n        };\r\n        title?: string;\r\n        width?: number;\r\n    };\r\n    /** Configures the field panel. */\r\n    fieldPanel: {\r\n        allowFieldDragging?: boolean;\r\n        showColumnFields?: boolean;\r\n        showDataFields?: boolean;\r\n        showFilterFields?: boolean;\r\n        showRowFields?: boolean;\r\n        texts?: {\r\n            columnFieldArea?: string;\r\n            dataFieldArea?: string;\r\n            filterFieldArea?: string;\r\n            rowFieldArea?: string;\r\n        };\r\n        visible?: boolean;\r\n    };\r\n    /** Configures the header filter feature. */\r\n    headerFilter: {\r\n        allowSearch?: boolean;\r\n        height?: number;\r\n        searchTimeout?: number;\r\n        showRelevantValues?: boolean;\r\n        texts?: {\r\n            cancel?: string;\r\n            emptyValue?: string;\r\n            ok?: string;\r\n        };\r\n        width?: number;\r\n    };\r\n    /** Specifies the widget's height. */\r\n    height: number | Function | string;\r\n    /** Specifies whether or not to hide rows and columns with no data. */\r\n    hideEmptySummaryCells: boolean;\r\n    /** Specifies text for a hint that appears when a user pauses on the widget. */\r\n    hint: string;\r\n    /** Specifies options configuring the load panel. */\r\n    loadPanel: {\r\n        enabled?: boolean;\r\n        height?: number;\r\n        indicatorSrc?: string;\r\n        shading?: boolean;\r\n        shadingColor?: string;\r\n        showIndicator?: boolean;\r\n        showPane?: boolean;\r\n        text?: string;\r\n        width?: number;\r\n    };\r\n    /** Specifies the layout of items in the row header. */\r\n    rowHeaderLayout: string;\r\n    /** Switches the widget to a right-to-left representation. */\r\n    rtlEnabled: boolean;\r\n    /** A configuration object specifying scrolling options. */\r\n    scrolling: {\r\n        mode?: string;\r\n        useNative?: boolean | string;\r\n    };\r\n    /** Specifies whether the outer borders of the grid are visible or not. */\r\n    showBorders: boolean;\r\n    /** Specifies whether to display the Grand Total column. */\r\n    showColumnGrandTotals: boolean;\r\n    /** Specifies whether to display the Total columns. */\r\n    showColumnTotals: boolean;\r\n    /** Specifies whether to display the Grand Total row. */\r\n    showRowGrandTotals: boolean;\r\n    /** Specifies whether to display the Total rows. Applies only if rowHeaderLayout is \"standard\". */\r\n    showRowTotals: boolean;\r\n    /** Specifies where to show the total rows or columns. Applies only if rowHeaderLayout is \"standard\". */\r\n    showTotalsPrior: string;\r\n    /** A configuration object specifying options related to state storing. */\r\n    stateStoring: {\r\n        customLoad?: Function;\r\n        customSave?: Function;\r\n        enabled?: boolean;\r\n        savingTimeout?: number;\r\n        storageKey?: string;\r\n        type?: string;\r\n    };\r\n    /** Specifies the number of the element when the Tab key is used for navigating. */\r\n    tabIndex: number;\r\n    /** Strings that can be changed or localized in the PivotGrid widget. */\r\n    texts: {\r\n        collapseAll?: string;\r\n        dataNotAvailable?: string;\r\n        expandAll?: string;\r\n        exportToExcel?: string;\r\n        grandTotal?: string;\r\n        noData?: string;\r\n        removeAllSorting?: string;\r\n        showFieldChooser?: string;\r\n        sortColumnBySummary?: string;\r\n        sortRowBySummary?: string;\r\n        total?: string;\r\n    };\r\n    /** Specifies whether the widget is visible. */\r\n    visible: boolean;\r\n    /** Specifies the widget's width. */\r\n    width: number | Function | string;\r\n    /** Specifies whether long text in header items should be wrapped. */\r\n    wordWrapEnabled: boolean;\r\n    /** A function that is executed when a pivot grid cell is clicked or tapped. */\r\n    onCellClick: EventEmitter<any>;\r\n    /** A function that is executed after a pivot grid cell is created. */\r\n    onCellPrepared: EventEmitter<any>;\r\n    /** A function that is executed when the widget's content is ready and each time the content is changed. */\r\n    onContentReady: EventEmitter<any>;\r\n    /** A function that is executed before the context menu is rendered. */\r\n    onContextMenuPreparing: EventEmitter<any>;\r\n    /** A function that is executed before the widget is disposed of. */\r\n    onDisposing: EventEmitter<any>;\r\n    /** A function that is executed after data is exported. */\r\n    onExported: EventEmitter<any>;\r\n    /** A function that is executed before data is exported. */\r\n    onExporting: EventEmitter<any>;\r\n    /** A function that is executed before a file with exported data is saved to the user's local storage. */\r\n    onFileSaving: EventEmitter<any>;\r\n    /** A function used in JavaScript frameworks to save the widget instance. */\r\n    onInitialized: EventEmitter<any>;\r\n    /** A function that is executed after a widget option is changed. */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowExpandAllChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowFilteringChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowSortingChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowSortingBySummaryChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    dataFieldAreaChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    dataSourceChange: EventEmitter<DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    exportChange: EventEmitter<{\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        ignoreExcelErrors?: boolean;\r\n        proxyUrl?: string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    fieldChooserChange: EventEmitter<{\r\n        allowSearch?: boolean;\r\n        applyChangesMode?: string;\r\n        enabled?: boolean;\r\n        height?: number;\r\n        layout?: number | string;\r\n        searchTimeout?: number;\r\n        texts?: {\r\n            allFields?: string;\r\n            columnFields?: string;\r\n            dataFields?: string;\r\n            filterFields?: string;\r\n            rowFields?: string;\r\n        };\r\n        title?: string;\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    fieldPanelChange: EventEmitter<{\r\n        allowFieldDragging?: boolean;\r\n        showColumnFields?: boolean;\r\n        showDataFields?: boolean;\r\n        showFilterFields?: boolean;\r\n        showRowFields?: boolean;\r\n        texts?: {\r\n            columnFieldArea?: string;\r\n            dataFieldArea?: string;\r\n            filterFieldArea?: string;\r\n            rowFieldArea?: string;\r\n        };\r\n        visible?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    headerFilterChange: EventEmitter<{\r\n        allowSearch?: boolean;\r\n        height?: number;\r\n        searchTimeout?: number;\r\n        showRelevantValues?: boolean;\r\n        texts?: {\r\n            cancel?: string;\r\n            emptyValue?: string;\r\n            ok?: string;\r\n        };\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    hideEmptySummaryCellsChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    hintChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    loadPanelChange: EventEmitter<{\r\n        enabled?: boolean;\r\n        height?: number;\r\n        indicatorSrc?: string;\r\n        shading?: boolean;\r\n        shadingColor?: string;\r\n        showIndicator?: boolean;\r\n        showPane?: boolean;\r\n        text?: string;\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rowHeaderLayoutChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    scrollingChange: EventEmitter<{\r\n        mode?: string;\r\n        useNative?: boolean | string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showBordersChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showColumnGrandTotalsChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showColumnTotalsChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showRowGrandTotalsChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showRowTotalsChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showTotalsPriorChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    stateStoringChange: EventEmitter<{\r\n        customLoad?: Function;\r\n        customSave?: Function;\r\n        enabled?: boolean;\r\n        savingTimeout?: number;\r\n        storageKey?: string;\r\n        type?: string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    tabIndexChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    textsChange: EventEmitter<{\r\n        collapseAll?: string;\r\n        dataNotAvailable?: string;\r\n        expandAll?: string;\r\n        exportToExcel?: string;\r\n        grandTotal?: string;\r\n        noData?: string;\r\n        removeAllSorting?: string;\r\n        showFieldChooser?: string;\r\n        sortColumnBySummary?: string;\r\n        sortRowBySummary?: string;\r\n        total?: string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    wordWrapEnabledChange: EventEmitter<boolean>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxPivotGrid;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxPivotGridModule {\r\n}\r\n"]}