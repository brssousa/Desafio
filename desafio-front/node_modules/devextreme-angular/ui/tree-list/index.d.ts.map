{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAstBA;;;;AAEA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges, QueryList } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport { dxFilterBuilderOptions } from 'devextreme/ui/filter_builder';\r\nimport { dxFormOptions } from 'devextreme/ui/form';\r\nimport { dxPopupOptions } from 'devextreme/ui/popup';\r\nimport DxTreeList from 'devextreme/ui/tree_list';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\nimport { DxiColumnComponent } from 'devextreme-angular/ui/nested';\r\n/** The TreeList is a widget that represents data from a local or remote source in the form of a multi-column tree view. This widget offers such features as sorting, filtering, editing, selection, etc. */\r\nexport declare class DxTreeListComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxTreeList;\r\n    /** Specifies the shortcut key that sets focus on the widget. */\r\n    accessKey: string;\r\n    /** Specifies whether or not the widget changes its state when interacting with a user. */\r\n    activeStateEnabled: boolean;\r\n    /** Specifies whether a user can reorder columns. */\r\n    allowColumnReordering: boolean;\r\n    /** Specifies whether a user can resize columns. */\r\n    allowColumnResizing: boolean;\r\n    /** Specifies whether all rows are expanded initially. */\r\n    autoExpandAll: boolean;\r\n    /** Automatically scrolls to the focused row when the focusedRowKey is changed. */\r\n    autoNavigateToFocusedRow: boolean;\r\n    /** Specifies whether data should be cached. */\r\n    cacheEnabled: boolean;\r\n    /** Enables a hint that appears when a user hovers the mouse pointer over a cell with truncated content. */\r\n    cellHintEnabled: boolean;\r\n    /** Specifies whether columns should adjust their widths to the content. */\r\n    columnAutoWidth: boolean;\r\n    /** Configures the column chooser. */\r\n    columnChooser: {\r\n        allowSearch?: boolean;\r\n        emptyPanelText?: string;\r\n        enabled?: boolean;\r\n        height?: number;\r\n        mode?: string;\r\n        searchTimeout?: number;\r\n        title?: string;\r\n        width?: number;\r\n    };\r\n    /** Configures column fixing. */\r\n    columnFixing: {\r\n        enabled?: boolean;\r\n        texts?: {\r\n            fix?: string;\r\n            leftPosition?: string;\r\n            rightPosition?: string;\r\n            unfix?: string;\r\n        };\r\n    };\r\n    /** Specifies whether the widget should hide columns to adapt to the screen or container size. Ignored if allowColumnResizing is true and columnResizingMode is \"widget\". */\r\n    columnHidingEnabled: boolean;\r\n    /** Specifies the minimum width of columns. */\r\n    columnMinWidth: number;\r\n    /** Specifies how the widget resizes columns. Applies only if allowColumnResizing is true. */\r\n    columnResizingMode: string;\r\n    /** Configures columns. */\r\n    columns: Array<DevExpress.ui.dxTreeListColumn | string>;\r\n    /** Specifies the width for all data columns. Has a lower priority than the column.width option. */\r\n    columnWidth: number;\r\n    /** Customizes columns after they are created. */\r\n    customizeColumns: Function;\r\n    /** Binds the widget to data. */\r\n    dataSource: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>;\r\n    /** Notifies the widget of the used data structure. */\r\n    dataStructure: string;\r\n    /** Specifies the format in which date-time values should be sent to the server. Use it only if you do not specify the dataSource at design time. */\r\n    dateSerializationFormat: string;\r\n    /** Specifies whether the widget responds to user interaction. */\r\n    disabled: boolean;\r\n    /** Configures editing. */\r\n    editing: {\r\n        allowAdding?: boolean | Function;\r\n        allowDeleting?: boolean | Function;\r\n        allowUpdating?: boolean | Function;\r\n        confirmDelete?: boolean;\r\n        form?: dxFormOptions;\r\n        mode?: string;\r\n        popup?: dxPopupOptions;\r\n        refreshMode?: string;\r\n        selectTextOnEditStart?: boolean;\r\n        startEditAction?: string;\r\n        texts?: {\r\n            addRow?: string;\r\n            addRowToNode?: string;\r\n            cancelAllChanges?: string;\r\n            cancelRowChanges?: string;\r\n            confirmDeleteMessage?: string;\r\n            confirmDeleteTitle?: string;\r\n            deleteRow?: string;\r\n            editRow?: string;\r\n            saveAllChanges?: string;\r\n            saveRowChanges?: string;\r\n            undeleteRow?: string;\r\n            validationCancelChanges?: string;\r\n        };\r\n        useIcons?: boolean;\r\n    };\r\n    /** Specifies the attributes to be attached to the widget's root element. */\r\n    elementAttr: any;\r\n    /** Indicates whether to show the error row. */\r\n    errorRowEnabled: boolean;\r\n    /** Specifies keys of the initially expanded rows. */\r\n    expandedRowKeys: Array<any>;\r\n    /** Specifies whether nodes appear expanded or collapsed after filtering is applied. */\r\n    expandNodesOnFiltering: boolean;\r\n    /** Configures the integrated filter builder. */\r\n    filterBuilder: dxFilterBuilderOptions;\r\n    /** Configures the popup in which the integrated filter builder is shown. */\r\n    filterBuilderPopup: dxPopupOptions;\r\n    /** Specifies whether filter and search results should include matching rows only, matching rows with ancestors, or matching rows with ancestors and descendants (full branch). */\r\n    filterMode: string;\r\n    /** Configures the filter panel. */\r\n    filterPanel: {\r\n        customizeText?: Function;\r\n        filterEnabled?: boolean;\r\n        texts?: {\r\n            clearFilter?: string;\r\n            createFilter?: string;\r\n            filterEnabledHint?: string;\r\n        };\r\n        visible?: boolean;\r\n    };\r\n    /** Configures the filter row. */\r\n    filterRow: {\r\n        applyFilter?: string;\r\n        applyFilterText?: string;\r\n        betweenEndText?: string;\r\n        betweenStartText?: string;\r\n        operationDescriptions?: {\r\n            between?: string;\r\n            contains?: string;\r\n            endsWith?: string;\r\n            equal?: string;\r\n            greaterThan?: string;\r\n            greaterThanOrEqual?: string;\r\n            lessThan?: string;\r\n            lessThanOrEqual?: string;\r\n            notContains?: string;\r\n            notEqual?: string;\r\n            startsWith?: string;\r\n        };\r\n        resetOperationText?: string;\r\n        showAllText?: string;\r\n        showOperationChooser?: boolean;\r\n        visible?: boolean;\r\n    };\r\n    /** Specifies whether to synchronize the filter row, header filter, and filter builder. The synchronized filter expression is stored in the filterValue option. */\r\n    filterSyncEnabled: boolean | string;\r\n    /** Specifies a filter expression. */\r\n    filterValue: any;\r\n    /** The index of the column that contains the focused data cell. This index is taken from the columns array. */\r\n    focusedColumnIndex: number;\r\n    /** Specifies whether the focused row feature is enabled. */\r\n    focusedRowEnabled: boolean;\r\n    /** Specifies or indicates the focused data row's index. Use this option when focusedRowEnabled is true. */\r\n    focusedRowIndex: number;\r\n    /** Specifies initially or currently focused grid row's key. Use it when focusedRowEnabled is true. */\r\n    focusedRowKey: any;\r\n    /** Specifies whether the widget can be focused using keyboard navigation. */\r\n    focusStateEnabled: boolean;\r\n    /** Specifies which data field defines whether the node has children. */\r\n    hasItemsExpr: Function | string;\r\n    /** Configures the header filter feature. */\r\n    headerFilter: {\r\n        allowSearch?: boolean;\r\n        height?: number;\r\n        searchTimeout?: number;\r\n        texts?: {\r\n            cancel?: string;\r\n            emptyValue?: string;\r\n            ok?: string;\r\n        };\r\n        visible?: boolean;\r\n        width?: number;\r\n    };\r\n    /** Specifies the widget's height. */\r\n    height: number | Function | string;\r\n    /** Specifies whether to highlight rows and cells with edited data. repaintChangesOnly should be true. */\r\n    highlightChanges: boolean;\r\n    /** Specifies text for a hint that appears when a user pauses on the widget. */\r\n    hint: string;\r\n    /** Specifies whether the widget changes its state when a user pauses on it. */\r\n    hoverStateEnabled: boolean;\r\n    /** Specifies which data field contains nested items. Set this option when your data has a hierarchical structure. */\r\n    itemsExpr: Function | string;\r\n    /** Configures keyboard navigation. */\r\n    keyboardNavigation: {\r\n        editOnKeyPress?: boolean;\r\n        enabled?: boolean;\r\n        enterKeyAction?: string;\r\n        enterKeyDirection?: string;\r\n    };\r\n    /** Specifies the key property (or properties) that provide(s) key values to access data items. Each key value must be unique. */\r\n    keyExpr: Function | string;\r\n    /** Configures the load panel. */\r\n    loadPanel: {\r\n        enabled?: boolean | string;\r\n        height?: number;\r\n        indicatorSrc?: string;\r\n        shading?: boolean;\r\n        shadingColor?: string;\r\n        showIndicator?: boolean;\r\n        showPane?: boolean;\r\n        text?: string;\r\n        width?: number;\r\n    };\r\n    /** Specifies text shown when the widget does not display any data. */\r\n    noDataText: string;\r\n    /** Configures the pager. */\r\n    pager: {\r\n        allowedPageSizes?: string | Array<number>;\r\n        infoText?: string;\r\n        showInfo?: boolean;\r\n        showNavigationButtons?: boolean;\r\n        showPageSizeSelector?: boolean;\r\n        visible?: boolean | string;\r\n    };\r\n    /** Configures paging. */\r\n    paging: {\r\n        enabled?: boolean;\r\n        pageIndex?: number;\r\n        pageSize?: number;\r\n    };\r\n    /** Specifies which data field provides parent keys. */\r\n    parentIdExpr: Function | string;\r\n    /** Notifies the TreeList of the server's data processing operations. Applies only if data has a plain structure. */\r\n    remoteOperations: string | {\r\n        filtering?: boolean;\r\n        grouping?: boolean;\r\n        sorting?: boolean;\r\n    };\r\n    /** Specifies whether to render the filter row, command columns, and columns with showEditorAlways set to true after other elements. */\r\n    renderAsync: boolean;\r\n    /** Specifies whether to repaint only those cells whose data changed. */\r\n    repaintChangesOnly: boolean;\r\n    /** Specifies the root node's identifier. Applies if dataStructure is \"plain\". */\r\n    rootValue: any;\r\n    /** Specifies whether rows should be shaded differently. */\r\n    rowAlternationEnabled: boolean;\r\n    /** Configures row reordering using drag and drop gestures. */\r\n    rowDragging: {\r\n        allowDropInsideItem?: boolean;\r\n        allowReordering?: boolean;\r\n        autoScroll?: boolean;\r\n        boundary?: Element | JQuery | string;\r\n        container?: Element | JQuery | string;\r\n        cursorOffset?: string | {\r\n            x?: number;\r\n            y?: number;\r\n        };\r\n        data?: any;\r\n        dragDirection?: string;\r\n        dragTemplate?: any;\r\n        dropFeedbackMode?: string;\r\n        filter?: string;\r\n        group?: string;\r\n        handle?: string;\r\n        onAdd?: Function;\r\n        onDragChange?: Function;\r\n        onDragEnd?: Function;\r\n        onDragMove?: Function;\r\n        onDragStart?: Function;\r\n        onRemove?: Function;\r\n        onReorder?: Function;\r\n        scrollSensitivity?: number;\r\n        scrollSpeed?: number;\r\n        showDragIcons?: boolean;\r\n    };\r\n    /** Switches the widget to a right-to-left representation. */\r\n    rtlEnabled: boolean;\r\n    /** Configures scrolling. */\r\n    scrolling: {\r\n        columnRenderingMode?: string;\r\n        mode?: string;\r\n        preloadEnabled?: boolean;\r\n        rowRenderingMode?: string;\r\n        scrollByContent?: boolean;\r\n        scrollByThumb?: boolean;\r\n        showScrollbar?: string;\r\n        useNative?: boolean | string;\r\n    };\r\n    /** Configures the search panel. */\r\n    searchPanel: {\r\n        highlightCaseSensitive?: boolean;\r\n        highlightSearchText?: boolean;\r\n        placeholder?: string;\r\n        searchVisibleColumnsOnly?: boolean;\r\n        text?: string;\r\n        visible?: boolean;\r\n        width?: number;\r\n    };\r\n    /** Allows you to select rows or determine which rows are selected. */\r\n    selectedRowKeys: Array<any>;\r\n    /** Configures runtime selection. */\r\n    selection: {\r\n        allowSelectAll?: boolean;\r\n        mode?: string;\r\n        recursive?: boolean;\r\n    };\r\n    /** Specifies whether the outer borders of the widget are visible. */\r\n    showBorders: boolean;\r\n    /** Specifies whether column headers are visible. */\r\n    showColumnHeaders: boolean;\r\n    /** Specifies whether vertical lines that separate one column from another are visible. */\r\n    showColumnLines: boolean;\r\n    /** Specifies whether horizontal lines that separate one row from another are visible. */\r\n    showRowLines: boolean;\r\n    /** Configures runtime sorting. */\r\n    sorting: {\r\n        ascendingText?: string;\r\n        clearText?: string;\r\n        descendingText?: string;\r\n        mode?: string;\r\n        showSortIndexes?: boolean;\r\n    };\r\n    /** Configures state storing. */\r\n    stateStoring: {\r\n        customLoad?: Function;\r\n        customSave?: Function;\r\n        enabled?: boolean;\r\n        savingTimeout?: number;\r\n        storageKey?: string;\r\n        type?: string;\r\n    };\r\n    /** Specifies the number of the element when the Tab key is used for navigating. */\r\n    tabIndex: number;\r\n    /** Specifies whether to enable two-way data binding. */\r\n    twoWayBindingEnabled: boolean;\r\n    /** Specifies whether the widget is visible. */\r\n    visible: boolean;\r\n    /** Specifies the widget's width. */\r\n    width: number | Function | string;\r\n    /** Specifies whether text that does not fit into a column should be wrapped. */\r\n    wordWrapEnabled: boolean;\r\n    /** A function that is executed before an adaptive detail row is rendered. */\r\n    onAdaptiveDetailRowPreparing: EventEmitter<any>;\r\n    /** A function that is executed when a cell is clicked or tapped. Executed before onRowClick. */\r\n    onCellClick: EventEmitter<any>;\r\n    /** A function that is executed when a cell is double-clicked or double-tapped. Executed before onRowDblClick. */\r\n    onCellDblClick: EventEmitter<any>;\r\n    /** A function that is executed after the pointer enters or leaves a cell. */\r\n    onCellHoverChanged: EventEmitter<any>;\r\n    /** A function that is executed after a grid cell is created. */\r\n    onCellPrepared: EventEmitter<any>;\r\n    /** A function that is executed when the widget's content is ready and each time the content is changed. */\r\n    onContentReady: EventEmitter<any>;\r\n    /** A function that is executed before the context menu is rendered. */\r\n    onContextMenuPreparing: EventEmitter<any>;\r\n    /** A function that is executed when an error occurs in the data source. */\r\n    onDataErrorOccurred: EventEmitter<any>;\r\n    /** A function that is executed before the widget is disposed of. */\r\n    onDisposing: EventEmitter<any>;\r\n    /** A function that is executed before a cell or row switches to the editing state. */\r\n    onEditingStart: EventEmitter<any>;\r\n    /** A function that is executed after an editor is created. Not executed for cells with an editCellTemplate. */\r\n    onEditorPrepared: EventEmitter<any>;\r\n    /**  */\r\n    onEditorPreparing: EventEmitter<any>;\r\n    /** A function that is executed after the focused cell changes. Applies only to cells in data rows. */\r\n    onFocusedCellChanged: EventEmitter<any>;\r\n    /** A function that is executed before the focused cell changes. Applies only to cells in data rows. */\r\n    onFocusedCellChanging: EventEmitter<any>;\r\n    /** A function that executed when the focused row changes. Applies only to data rows. focusedRowEnabled should be true. */\r\n    onFocusedRowChanged: EventEmitter<any>;\r\n    /** A function that is executed before the focused row changes. Applies only to data rows. focusedRowEnabled should be true. */\r\n    onFocusedRowChanging: EventEmitter<any>;\r\n    /** A function used in JavaScript frameworks to save the widget instance. */\r\n    onInitialized: EventEmitter<any>;\r\n    /** A function that is executed before a new row is added to the widget. */\r\n    onInitNewRow: EventEmitter<any>;\r\n    /** A function that is executed when the widget is in focus and a key has been pressed down. */\r\n    onKeyDown: EventEmitter<any>;\r\n    /** A function that is executed after the loaded nodes are initialized. */\r\n    onNodesInitialized: EventEmitter<any>;\r\n    /** A function that is executed after a widget option is changed. */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /** A function that is executed when a grid row is clicked or tapped. */\r\n    onRowClick: EventEmitter<any>;\r\n    /** A function that is executed after a row is collapsed. */\r\n    onRowCollapsed: EventEmitter<any>;\r\n    /** A function that is executed before a row is collapsed. */\r\n    onRowCollapsing: EventEmitter<any>;\r\n    /** A function that is executed when a row is double-clicked or double-tapped. Executed after onCellDblClick. */\r\n    onRowDblClick: EventEmitter<any>;\r\n    /** A function that is executed after a row is expanded. */\r\n    onRowExpanded: EventEmitter<any>;\r\n    /** A function that is executed before a row is expanded. */\r\n    onRowExpanding: EventEmitter<any>;\r\n    /** A function that is executed after a new row has been inserted into the data source. */\r\n    onRowInserted: EventEmitter<any>;\r\n    /** A function that is executed before a new row is inserted into the data source. */\r\n    onRowInserting: EventEmitter<any>;\r\n    /** A function that is executed after a row is created. */\r\n    onRowPrepared: EventEmitter<any>;\r\n    /** A function that is executed after a row has been removed from the data source. */\r\n    onRowRemoved: EventEmitter<any>;\r\n    /** A function that is executed before a row is removed from the data source. */\r\n    onRowRemoving: EventEmitter<any>;\r\n    /** A function that is executed after a row has been updated in the data source. */\r\n    onRowUpdated: EventEmitter<any>;\r\n    /** A function that is executed before a row is updated in the data source. */\r\n    onRowUpdating: EventEmitter<any>;\r\n    /** A function that is executed after cells in a row are validated against validation rules. */\r\n    onRowValidating: EventEmitter<any>;\r\n    /** A function that is executed after selecting a row or clearing its selection. */\r\n    onSelectionChanged: EventEmitter<any>;\r\n    /** A function that is executed before the toolbar is created. */\r\n    onToolbarPreparing: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    accessKeyChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    activeStateEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowColumnReorderingChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    allowColumnResizingChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    autoExpandAllChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    autoNavigateToFocusedRowChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    cacheEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    cellHintEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnAutoWidthChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnChooserChange: EventEmitter<{\r\n        allowSearch?: boolean;\r\n        emptyPanelText?: string;\r\n        enabled?: boolean;\r\n        height?: number;\r\n        mode?: string;\r\n        searchTimeout?: number;\r\n        title?: string;\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnFixingChange: EventEmitter<{\r\n        enabled?: boolean;\r\n        texts?: {\r\n            fix?: string;\r\n            leftPosition?: string;\r\n            rightPosition?: string;\r\n            unfix?: string;\r\n        };\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnHidingEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnMinWidthChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnResizingModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnsChange: EventEmitter<Array<DevExpress.ui.dxTreeListColumn | string>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    columnWidthChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    customizeColumnsChange: EventEmitter<Function>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    dataStructureChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    dateSerializationFormatChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    editingChange: EventEmitter<{\r\n        allowAdding?: boolean | Function;\r\n        allowDeleting?: boolean | Function;\r\n        allowUpdating?: boolean | Function;\r\n        confirmDelete?: boolean;\r\n        form?: dxFormOptions;\r\n        mode?: string;\r\n        popup?: dxPopupOptions;\r\n        refreshMode?: string;\r\n        selectTextOnEditStart?: boolean;\r\n        startEditAction?: string;\r\n        texts?: {\r\n            addRow?: string;\r\n            addRowToNode?: string;\r\n            cancelAllChanges?: string;\r\n            cancelRowChanges?: string;\r\n            confirmDeleteMessage?: string;\r\n            confirmDeleteTitle?: string;\r\n            deleteRow?: string;\r\n            editRow?: string;\r\n            saveAllChanges?: string;\r\n            saveRowChanges?: string;\r\n            undeleteRow?: string;\r\n            validationCancelChanges?: string;\r\n        };\r\n        useIcons?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    errorRowEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    expandedRowKeysChange: EventEmitter<Array<any>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    expandNodesOnFilteringChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    filterBuilderChange: EventEmitter<dxFilterBuilderOptions>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    filterBuilderPopupChange: EventEmitter<dxPopupOptions>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    filterModeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    filterPanelChange: EventEmitter<{\r\n        customizeText?: Function;\r\n        filterEnabled?: boolean;\r\n        texts?: {\r\n            clearFilter?: string;\r\n            createFilter?: string;\r\n            filterEnabledHint?: string;\r\n        };\r\n        visible?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    filterRowChange: EventEmitter<{\r\n        applyFilter?: string;\r\n        applyFilterText?: string;\r\n        betweenEndText?: string;\r\n        betweenStartText?: string;\r\n        operationDescriptions?: {\r\n            between?: string;\r\n            contains?: string;\r\n            endsWith?: string;\r\n            equal?: string;\r\n            greaterThan?: string;\r\n            greaterThanOrEqual?: string;\r\n            lessThan?: string;\r\n            lessThanOrEqual?: string;\r\n            notContains?: string;\r\n            notEqual?: string;\r\n            startsWith?: string;\r\n        };\r\n        resetOperationText?: string;\r\n        showAllText?: string;\r\n        showOperationChooser?: boolean;\r\n        visible?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    filterSyncEnabledChange: EventEmitter<boolean | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    filterValueChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    focusedColumnIndexChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    focusedRowEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    focusedRowIndexChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    focusedRowKeyChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    focusStateEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    hasItemsExprChange: EventEmitter<Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    headerFilterChange: EventEmitter<{\r\n        allowSearch?: boolean;\r\n        height?: number;\r\n        searchTimeout?: number;\r\n        texts?: {\r\n            cancel?: string;\r\n            emptyValue?: string;\r\n            ok?: string;\r\n        };\r\n        visible?: boolean;\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    highlightChangesChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    hintChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    hoverStateEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    itemsExprChange: EventEmitter<Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    keyboardNavigationChange: EventEmitter<{\r\n        editOnKeyPress?: boolean;\r\n        enabled?: boolean;\r\n        enterKeyAction?: string;\r\n        enterKeyDirection?: string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    keyExprChange: EventEmitter<Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    loadPanelChange: EventEmitter<{\r\n        enabled?: boolean | string;\r\n        height?: number;\r\n        indicatorSrc?: string;\r\n        shading?: boolean;\r\n        shadingColor?: string;\r\n        showIndicator?: boolean;\r\n        showPane?: boolean;\r\n        text?: string;\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    noDataTextChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pagerChange: EventEmitter<{\r\n        allowedPageSizes?: string | Array<number>;\r\n        infoText?: string;\r\n        showInfo?: boolean;\r\n        showNavigationButtons?: boolean;\r\n        showPageSizeSelector?: boolean;\r\n        visible?: boolean | string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pagingChange: EventEmitter<{\r\n        enabled?: boolean;\r\n        pageIndex?: number;\r\n        pageSize?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    parentIdExprChange: EventEmitter<Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    remoteOperationsChange: EventEmitter<string | {\r\n        filtering?: boolean;\r\n        grouping?: boolean;\r\n        sorting?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    renderAsyncChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    repaintChangesOnlyChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rootValueChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rowAlternationEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rowDraggingChange: EventEmitter<{\r\n        allowDropInsideItem?: boolean;\r\n        allowReordering?: boolean;\r\n        autoScroll?: boolean;\r\n        boundary?: Element | JQuery | string;\r\n        container?: Element | JQuery | string;\r\n        cursorOffset?: string | {\r\n            x?: number;\r\n            y?: number;\r\n        };\r\n        data?: any;\r\n        dragDirection?: string;\r\n        dragTemplate?: any;\r\n        dropFeedbackMode?: string;\r\n        filter?: string;\r\n        group?: string;\r\n        handle?: string;\r\n        onAdd?: Function;\r\n        onDragChange?: Function;\r\n        onDragEnd?: Function;\r\n        onDragMove?: Function;\r\n        onDragStart?: Function;\r\n        onRemove?: Function;\r\n        onReorder?: Function;\r\n        scrollSensitivity?: number;\r\n        scrollSpeed?: number;\r\n        showDragIcons?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    scrollingChange: EventEmitter<{\r\n        columnRenderingMode?: string;\r\n        mode?: string;\r\n        preloadEnabled?: boolean;\r\n        rowRenderingMode?: string;\r\n        scrollByContent?: boolean;\r\n        scrollByThumb?: boolean;\r\n        showScrollbar?: string;\r\n        useNative?: boolean | string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    searchPanelChange: EventEmitter<{\r\n        highlightCaseSensitive?: boolean;\r\n        highlightSearchText?: boolean;\r\n        placeholder?: string;\r\n        searchVisibleColumnsOnly?: boolean;\r\n        text?: string;\r\n        visible?: boolean;\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    selectedRowKeysChange: EventEmitter<Array<any>>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    selectionChange: EventEmitter<{\r\n        allowSelectAll?: boolean;\r\n        mode?: string;\r\n        recursive?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showBordersChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showColumnHeadersChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showColumnLinesChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showRowLinesChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    sortingChange: EventEmitter<{\r\n        ascendingText?: string;\r\n        clearText?: string;\r\n        descendingText?: string;\r\n        mode?: string;\r\n        showSortIndexes?: boolean;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    stateStoringChange: EventEmitter<{\r\n        customLoad?: Function;\r\n        customSave?: Function;\r\n        enabled?: boolean;\r\n        savingTimeout?: number;\r\n        storageKey?: string;\r\n        type?: string;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    tabIndexChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    twoWayBindingEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    wordWrapEnabledChange: EventEmitter<boolean>;\r\n    columnsChildren: QueryList<DxiColumnComponent>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxTreeList;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxTreeListModule {\r\n}\r\n"]}