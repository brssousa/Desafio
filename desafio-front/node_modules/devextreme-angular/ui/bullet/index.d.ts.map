{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;;;;AAEA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter } from '@angular/core';\r\nimport { format } from 'devextreme/ui/widget/ui.widget';\r\nimport { Font } from 'devextreme/viz/core/base_widget';\r\nimport DxBullet from 'devextreme/viz/bullet';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, WatcherHelper } from 'devextreme-angular/core';\r\n/** The Bullet widget is useful when you need to compare a single measure to a target value. The widget comprises a horizontal bar indicating the measure and a vertical line indicating the target value. */\r\nexport declare class DxBulletComponent extends DxComponent implements OnDestroy {\r\n    instance: DxBullet;\r\n    /** Specifies a color for the bullet bar. */\r\n    color: string;\r\n    /** Specifies whether the widget responds to user interaction. */\r\n    disabled: boolean;\r\n    /** Specifies the attributes to be attached to the widget's root element. */\r\n    elementAttr: any;\r\n    /** Specifies an end value for the invisible scale. */\r\n    endScaleValue: number;\r\n    /** Generates space around the widget. */\r\n    margin: {\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    };\r\n    /** Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path. */\r\n    pathModified: boolean;\r\n    /** Switches the widget to a right-to-left representation. */\r\n    rtlEnabled: boolean;\r\n    /** Specifies whether or not to show the target line. */\r\n    showTarget: boolean;\r\n    /** Specifies whether or not to show the line indicating zero on the invisible scale. */\r\n    showZeroLevel: boolean;\r\n    /** Specifies the widget's size in pixels. */\r\n    size: {\r\n        height?: number;\r\n        width?: number;\r\n    };\r\n    /** Specifies a start value for the invisible scale. */\r\n    startScaleValue: number;\r\n    /** Specifies the value indicated by the target line. */\r\n    target: number;\r\n    /** Specifies a color for both the target and zero level lines. */\r\n    targetColor: string;\r\n    /** Specifies the width of the target line. */\r\n    targetWidth: number;\r\n    /** Sets the name of the theme the widget uses. */\r\n    theme: string;\r\n    /** Configures the tooltip. */\r\n    tooltip: {\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: Font;\r\n        format?: format | string;\r\n        interactive?: boolean;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    };\r\n    /** Specifies the primary value indicated by the bullet bar. */\r\n    value: number;\r\n    /** A function that is executed before the widget is disposed of. */\r\n    onDisposing: EventEmitter<any>;\r\n    /** A function that is executed when the widget's rendering has finished. */\r\n    onDrawn: EventEmitter<any>;\r\n    /** A function that is executed after the widget is exported. */\r\n    onExported: EventEmitter<any>;\r\n    /** A function that is executed before the widget is exported. */\r\n    onExporting: EventEmitter<any>;\r\n    /** A function that is executed before a file with exported widget is saved to the user's local storage. */\r\n    onFileSaving: EventEmitter<any>;\r\n    /** A function that is executed when an error or warning occurs. */\r\n    onIncidentOccurred: EventEmitter<any>;\r\n    /** A function used in JavaScript frameworks to save the widget instance. */\r\n    onInitialized: EventEmitter<any>;\r\n    /** A function that is executed after a widget option is changed. */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /** A function that is executed when a tooltip becomes hidden. */\r\n    onTooltipHidden: EventEmitter<any>;\r\n    /** A function that is executed when a tooltip appears. */\r\n    onTooltipShown: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    colorChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    endScaleValueChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    marginChange: EventEmitter<{\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    pathModifiedChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showTargetChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    showZeroLevelChange: EventEmitter<boolean>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    sizeChange: EventEmitter<{\r\n        height?: number;\r\n        width?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    startScaleValueChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    targetChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    targetColorChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    targetWidthChange: EventEmitter<number>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    themeChange: EventEmitter<string>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    tooltipChange: EventEmitter<{\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: Font;\r\n        format?: format | string;\r\n        interactive?: boolean;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    }>;\r\n    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */\r\n    valueChange: EventEmitter<number>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxBullet;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class DxBulletModule {\r\n}\r\n"]}